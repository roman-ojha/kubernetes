-> kubectl version --output=yaml (see client and server version)
-> minikube --version
-> minikube start --driver==hyperv(start kubernetes cluster with hyperv hypervisor)
-> minikube config set driver hyperv (set hyperv as default driver)
-> kubectl get all (to get all Cluster, Service & Deployment)
-> kubectl get nodes (to get all nodes)
-> minikube status (status of minikube)
-> kubectl get pod (get list of Pods)
-> kubectl get services (get the running services)
-> kubectl get service (get the running services)
-> kubectl create -h (we can see all the docs on create command)
-> kubectl create deployment <Name_of_deployment> --image=image [--dry-run] [options] (so here we will create pods using deployment so firstly we will provide the name of the deployment and image like docker container image)
-> kubectl get deployment (get list of deployments)
-> kubectl get replicaset (get list of replicaSet)
-> kubectl edit deployment <Name_of_deployment> (to edit deployment configuration file)
-> kubectl logs <pod_name> (to see all the logs on that pod)
-> kubectl describe <pod_name> (To see the state changes that is happening inside the pod)
-> kubectl exec -it <pod_name> -- bin/bash (To get the interactive terminal of the application that is running)
-> kubectl delete deployment <Name_of_deployment> (delete deployment)
-> kubectl delete service <Name_of_service> (delete service)
-> kubectl apply -f <config_file_name>.yaml (to create service, deployment or secret from the configuration file)
-> kubectl describe service <Name_of_service> (check the service information)
-> kubectl get pod -o wide (get more information about Pods like Ip address as well)
-> kubectl get deployment nginx-deployment -o yaml (to see the updated configuration of deployment stored inside 'etcd' in Master Node)
-> kubectl get deployment nginx-deployment -o yaml > <deployment_result_file_name>.yaml (to store the updated configuration of deployment stored inside 'etcd' in Master Node inside given file)
-> kubectl delete -f .\<Deployment_file_name>.yaml (delete Deployment using configuration file)
-> kubectl delete -f .\<Service_file_name>.yaml (delete service using configuration file)
-> kubectl get secret (get list of secret that we have crated)
-> kubectl get pod --watch (to see status of pod live)
-> kubectl get all | grep <name_of_component> (If you want to get all the component information for specific deployment)
-> kubectl get configMap (command to get the list of created configMap)
-> kubectl delete secret <secret_name> (command to delete secret)